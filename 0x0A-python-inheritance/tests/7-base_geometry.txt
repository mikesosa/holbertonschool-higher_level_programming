#!/usr/bin/python3

>>> test = __import__('7-base_geometry').BaseGeometry
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> test.integer_validator("name", 1)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.integer_validator("goku", "1")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

>>> test.integer_validator("value", "1")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.area(1)
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> test.area()
Traceback (most recent call last):
...
TypeError: area() missing 1 required positional argument: 'self'

>>> test.integer_validator("myint", 12)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.integer_validator("width", 89)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'


>>> bg = BaseGeometry()
>>> bg.integer_validator("myint", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integervalidator("myint", 12)
Traceback (most recent call last):
...
AttributeError: 'BaseGeometry' object has no attribute 'integervalidator'

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
